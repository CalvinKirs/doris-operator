
# deploy a doris cluster
dorisCluster:
  # the name of doriscluster, if not set, the chart name will be used.
  name: "doriscluster-helm"
  # the namespace of doriscluster, if not set, the release namespace will be used.
  namespace: ""
  # annotations for doris cluster.
  annotations: {}
  # specify the cn deploy or not.
  enabledCn: false
  # specify the broker deploy or not.
  enabledBroker: false
  # specify the doriscluster adminuser or not.
  # When adding adminuser. should follow the steps:
  # 1. Start dorisclusert without adminUser
  # 2. Run 'CREATE USER ...' or 'SET PASSWORD ...' in mysql client
  # 3. Add the name and password added in the previous step to adminUser and execute helm
  adminUser: {}
  # name: root
  # password: "12345"

feSpec:
  replicas: 3
  # electionNumber represents `FOLLOWER` number, replicas - electionNumber as `OBSERVER`
  # electionNumber: 3
  # the pod labels for user select or classify pods.
  labels: {}
    # selectdb.app.classify: "classify-1"
  image:
    repository: selectdb/doris.fe-ubuntu
    tag: latest
    # imagePullSecrets:
    #   - name: imagePullSecret
  # config the service port for fe service.
  # if you want to use a dedicated port for fe service, you can config the port.
  # see https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports for more details.
  service:
    # the fe service type, only supported ClusterIP, NodePort, LoadBalancer
    type: ClusterIP
    # type: NodePort
    # servicePorts:
    #   - nodePort: 30001
    #     targetPort: 9030
    #   - nodePort: 30002
    #     targetPort: 8030
    # the loadBalancerIP for static ip config when the type=LoadBalancer and loadbalancerIp is not empty.
    # type: "LoadBalancer"
    # loadbalancerIP: "127.0.0.1"
    # use LoadBalancer on cloud platform, try to configure it using annotations:
    annotations: {}
      # service.beta.kubernetes.io/alibaba-cloud-loadbalancer-address-type: "intranet"
  # specify the configMap
  configMap: {}
    # fe.config: |
    #   http_port = 8030
    #   rpc_port = 9020
    #   query_port = 9030
    #   edit_log_port = 9010
    # Other config files can also be specified here
    # hdfs-site.xml: |
    #   <?xml version="1.0" encoding="UTF-8"?>
    #
    #   <configuration>
    #     <property>
    #       <name>dfs.nameservices</name>
    #       <value>ns</value>
    #     </property>
  # If configured separately here, it will overwrite the total resources configuration default.
  # but the default configuration of other types will still take effect.
  resource: {}
     # requests:
     #   cpu: 8
     #   memory: 16Gi
     # limits:
     #   cpu: 16
     #   memory: 32Gi
  # If specified, the pod's nodeSelector，displayName="Map of nodeSelectors to match when scheduling pods on nodes"
  nodeSelector: {}
    # kubernetes.io/arch: amd64
    # kubernetes.io/os: linux
    # app.kubernetes.node.name: "k8s-node1"
  env: []
    # - name: "HOME"
    #   value: "/opt/selectdb"
    # - name: HOST_IP
    #   valueFrom:
    #     fieldRef:
    #       apiVersion: v1
    #       fieldPath: status.hostIP
  affinity: {}
  # Node tolerations for fe pod scheduling to nodes with taints
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations: []
  # - key: "toleration"
  #   value: "master"
  # hostAliases allows adding entries to /etc/hosts inside the containers
  hostAliases: []
    # If doris use hdfs or catalog, config the map of namenode host here is beneficial
    # - ip: "127.0.0.1"
    #   hostnames:
    #   - "hostname1"
    # - ip: "127.0.0.2"
    #   hostnames:
    #   - "hostname2"
  persistentVolumeClaim: {}
    # meta volume, mountPath is /opt/apache-doris/fe/doris-meta
    # metaPersistentVolume:
    #   storage: 200Gi
    # when use specific storageclass, the storageClassName should reConfig, example as annotation.
    #   storageClassName: ""
    # logs volume, mountPath is /opt/apache-doris/fe/log
    # logsPersistentVolume:
    #   storage: 100Gi
    # when use specific storageclass, the storageClassName should reConfig, example as annotation.
    #   storageClassName: ""
  systemInitialization: {}
    # initImage: "selectdb/alpine:latest"
    # command: [ "/sbin/sysctl", "-w", "vm.max_map_count=2000000" ]

beSpec:
  replicas: 3
  # the pod labels for user select or classify pods.
  labels: {}
    # selectdb.app.classify: "classify-1"
  image:
    repository: selectdb/doris.be-ubuntu
    tag: latest
    # imagePullSecrets:
    #   - name: imagePullSecret
  # config the service port for be service.
  # if you want to use a dedicated port for be service, you can config the port.
  # see https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports for more details.
  service:
    # the be service type, only supported ClusterIP, NodePort, LoadBalancer
    type: ClusterIP
    # type: NodePort
    # servicePorts:
    #   - nodePort: 30003
    #     targetPort: 9040
    #   - nodePort: 30004
    #     targetPort: 8040
    # the loadBalancerIP for static ip config when the type=LoadBalancer and loadbalancerIp is not empty.
    # type: "LoadBalancer"
    # loadbalancerIP: "127.0.0.1"
    # use LoadBalancer on cloud platform, try to configure it using annotations
    annotations: {}
      # service.beta.kubernetes.io/alibaba-cloud-loadbalancer-address-type: "intranet"
  # specify the configMap
  configMap: {}
    # be.config: |
    #   be_port = 9060
    #   webserver_port = 8040
    #   heartbeat_service_port = 9050
    #   brpc_port = 8060
    #   storage_root_path = /data/doris/be/storage
    # Other config files can also be specified here
    # hdfs-site.xml: |
    #   <?xml version="1.0" encoding="UTF-8"?>
    #
    #   <configuration>
    #     <property>
    #       <name>dfs.nameservices</name>
    #       <value>ns</value>
    #     </property>
  # If configured separately here, it will overwrite the total resources configuration default.
  # but the default configuration of other types will still take effect.
  resource: {}
    # requests:
    #   cpu: 8
    #   memory: 16Gi
    # limits:
    #   cpu: 16
    #   memory: 32Gi
  # If specified, the pod's nodeSelector，displayName="Map of nodeSelectors to match when scheduling pods on nodes"
  nodeSelector: {}
    # kubernetes.io/arch: amd64
    # kubernetes.io/os: linux
    # app.kubernetes.node.name: "k8s-node1"
  env: []
    # - name: "HOME"
    #   value: "/opt/selectdb"
    # - name: HOST_IP
    #   valueFrom:
    #     fieldRef:
    #     apiVersion: v1
    #     fieldPath: status.hostIP
  affinity: {}
  # Node tolerations for fe pod scheduling to nodes with taints
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations: []
  # - key: "toleration"
  #   value: "master"
  # hostAliases allows adding entries to /etc/hosts inside the containers
  hostAliases: []
    # If doris use hdfs or catalog, config the map of namenode host here is beneficial
    # - ip: "127.0.0.1"
    #   hostnames:
    #   - "hostname1"
    # - ip: "127.0.0.2"
    #   hostnames:
    #   - "hostname2"
  persistentVolumeClaim: {}
    # data volume, mountPath is /opt/apache-doris/be/storage
    # dataPersistentVolume:
    #   storage: 200Gi
    # when use specific storageclass, the storageClassName should reConfig, example as annotation.
    #   storageClassName: ""
    # logs volume, mountPath is /opt/apache-doris/be/log
    # logsPersistentVolume:
    #   storage: 100Gi
    # when use specific storageclass, the storageClassName should reConfig, example as annotation.
    #   storageClassName: ""
  systemInitialization: {}
    # initImage: "selectdb/alpine:latest"
    # command: [ "/sbin/sysctl", "-w", "vm.max_map_count=2000000" ]

cnSpec:
  replicas: 3
  # the pod labels for user select or classify pods.
  labels: {}
    # selectdb.app.classify: "classify-1"
  image:
    repository: selectdb/doris.be-ubuntu
    tag: latest
    # imagePullSecrets:
    #   - name: imagePullSecret
  # config the service port for cn service.
  # if you want to use a dedicated port for cn service, you can config the port.
  # see https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports for more details.
  service:
    # the cn service type, only supported ClusterIP, NodePort, LoadBalancer
    type: ClusterIP
    # type: NodePort
    # servicePorts:
    #   - nodePort: 30005
    #     targetPort: 9040
    #   - nodePort: 30006
    #     targetPort: 8040
    # type: "LoadBalancer"
    # the loadBalancerIP for static ip config when the type=LoadBalancer and loadbalancerIp is not empty.
    # loadbalancerIP: "127.0.0.1"
    # use LoadBalancer on cloud platform, try to configure it using annotations
    annotations: {}
      # service.beta.kubernetes.io/alibaba-cloud-loadbalancer-address-type: "intranet"
  # specify the configMap
  configMap: {}
    # cn.config: |
    #   be_port = 9060
    #   webserver_port = 8040
    #   heartbeat_service_port = 9050
    #   brpc_port = 8060
    #   storage_root_path = /data/doris/be/storage
    # Other config files can also be specified here
    # hdfs-site.xml: |
    #   ?xml version="1.0" encoding="UTF-8"?>
    #
    #   configuration>
    #    <property>
    #      <name>dfs.nameservices</name>
    #      <value>ns</value>
    #    </property>
  # If configured separately here, it will overwrite the total resources configuration default.
  # but the default configuration of other types will still take effect.
  resource: {}
    # requests:
    #   cpu: 8
    #   memory: 16Gi
    # limits:
    #   cpu: 16
    #   memory: 32Gi
  # If specified, the pod's nodeSelector，displayName="Map of nodeSelectors to match when scheduling pods on nodes"
  nodeSelector: {}
    # kubernetes.io/arch: amd64
    # kubernetes.io/os: linux
    # app.kubernetes.node.name: "k8s-node1"
  env: []
    # - name: "HOME"
    #   value: "/opt/selectdb"
    # - name: HOST_IP
    #   valueFrom:
    #     fieldRef:
    #       apiVersion: v1
    #       fieldPath: status.hostIP
  affinity: {}
  # Node tolerations for fe pod scheduling to nodes with taints
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations: []
  # - key: "toleration"
  #   value: "master"
  # hostAliases allows adding entries to /etc/hosts inside the containers
  hostAliases: []
    # If doris use hdfs or catalog, config the map of namenode host here is beneficial
    # - ip: "127.0.0.1"
    #   hostnames:
    #   - "hostname1"
    # - ip: "127.0.0.2"
    #   hostnames:
    #   - "hostname2"
  persistentVolumeClaim: {}
    # data volume, mountPath is /opt/apache-doris/be/storage
    # dataPersistentVolume:
    #   storage: 200Gi
    # when use specific storageclass, the storageClassName should reConfig, example as annotation.
    #   storageClassName: ""
    # logs volume, mountPath is /opt/apache-doris/be/log
    # logsPersistentVolume:
    #   storage: 100Gi
    # when use specific storageclass, the storageClassName should reConfig, example as annotation.
    #   storageClassName: ""
  systemInitialization: {}
    # initImage: "selectdb/alpine:latest"
    # command: [ "/sbin/sysctl", "-w", "vm.max_map_count=2000000" ]
  # specific cn auto scale policy
  autoScalingPolicy:
    enable: true
    # version: v2
    minReplicas: 1
    maxReplicas: 4
    # hpaPolicy response to horizontlaPodAutoscaler's HorizontalPodAutoscalerSpec
    hpaPolicy: {}
      # metrics:
      #   - type: Resource
      #     resource:
      #       name: cpu
      #       target:
      #         type: Utilization
      #         averageUtilization: 30

brokerSpec:
  replicas: 3
  # the pod labels for user select or classify pods.
  labels: {}
    # selectdb.app.classify: "classify-1"
  image:
    repository: selectdb/doris.broker-ubuntu
    tag: latest
    # imagePullSecrets:
    #  - name: imagePullSecret
  # specify the configMap
  configMap: {}
    # apache_hdfs_broker.conf: |
    #   broker_ipc_port: 8000
    #   client_expire_seconds: 3600
    # Other config files can also be specified here
    # hdfs-site.xml: |
    #   <?xml version="1.0" encoding="UTF-8"?>
    #
    #   <configuration>
    #     <property>
    #       <name>dfs.nameservices</name>
    #       <value>ns</value>
    #     </property>
  # If configured separately here, it will overwrite the total resources configuration default.
  # but the default configuration of other types will still take effect.
  resource: {}
    # requests:
    #   cpu: 8
    #   memory: 16Gi
    # limits:
    #   cpu: 16
    #   memory: 32Gi
  # If specified, the pod's nodeSelector，displayName="Map of nodeSelectors to match when scheduling pods on nodes"
  nodeSelector: {}
    # kubernetes.io/arch: amd64
    # kubernetes.io/os: linux
    # app.kubernetes.node.name: "k8s-node1"
  env: []
    # - name: "HOME"
    #   value: "/opt/selectdb"
    # - name: HOST_IP
    #   valueFrom:
    #     fieldRef:
    #       apiVersion: v1
    #       fieldPath: status.hostIP
  affinity: {}
  # Node tolerations for fe pod scheduling to nodes with taints
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations: []
    # - key: "toleration"
    #   value: "master"
  # hostAliases allows adding entries to /etc/hosts inside the containers
  hostAliases: []
    # If doris use hdfs or catalog, config the map of namenode host here is beneficial
    # - ip: "127.0.0.1"
    #   hostnames:
    #   - "hostname1"
    # - ip: "127.0.0.2"
    #   hostnames:
    #   - "hostname2"
  persistentVolumeClaim: {}
    # logs volume, mountPath is /opt/apache-doris/apache_hdfs_broker/log
    # logsPersistentVolume:
    #   storage: 100Gi
    # when use specific storageclass, the storageClassName should reConfig, example as annotation.
    #   storageClassName: ""
  systemInitialization: {}
    # initImage: "selectdb/alpine:latest"
    # command: [ "/sbin/sysctl", "-w", "vm.max_map_count=2000000" ]













